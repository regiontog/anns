random_seed = 0

[input]
size = 15

[[layers]]
kind = "regular_feedforward"
size = 3
activation = "relu"

[[layers]]
kind = "regular_feedforward"
size = 1
activation = "relu"

[cost]
function = "mean_square_error"

[accuracy]
function = "rounded_equal"

[optimizer]
function = "Adam"

[optimizer.parameters]
epsilon = 1e-3
# learning_rate = 0.04

[optimizer.parameters.learning_rate]
function = "exponential_decay"

[optimizer.parameters.learning_rate.parameters]
initial_rate = 0.05
to = 0.0001
decay_steps = 1000
staircase = false

[initial_weights]
function = "truncated_normal"

[initial_weights.parameters]
stddev = 0.1

[data]
case_fraction = 0.5

[data.source]
function = "import_dataset"

[data.source.parameters]
filepath = "dataset.py"
dataset = "summed_bitvectors"

[validation]
fraction = 0.1
interval = 10

[test]
fraction = 0.1

[minibatch]
size = 100
steps = 1000

[visualization]
weights = [1, 2, 3, 4]
biasses = [1, 4]

[visualization.map]
size = 0
layers = [0, 5]
dendogram_layers = [5]
